// Copyright 2008 Google Inc.  All rights reserved.
//
// A proto file used for unit testing the ECMAScript
// compiler and framework.
//
// Modified by Andy Hochhaus <ahochhaus@samegoal.com> to be compatible with
// use in a protoc compiler plugin.

syntax = "proto2";

// TODO(hochhaus): Use custom options for jstype 64-bit Number type and
// javascript_package. Remove hard-coded special case for fields with names
// ending in "_number".
//
// optional_int64_number = 50 [default = ..., (jstype) = JS_NUMBER];
// repeated_int64_number = 52 [(jstype) = JS_NUMBER];
//
//option (javascript_package) = "proto2";

message TestAllTypes {
  message NestedMessage {
    optional int32 b = 1;
    optional int32 c = 2;
  }

  enum NestedEnum {
    FOO = 0;
    BAR = 2;
    BAZ = 3;
  }

  // Singular
  optional    int32 optional_int32    =  1;
  optional    int64 optional_int64    =  2 [default = 1];
  optional   uint32 optional_uint32   =  3;
  optional   uint64 optional_uint64   =  4;
  optional   sint32 optional_sint32   =  5;
  optional   sint64 optional_sint64   =  6;
  optional  fixed32 optional_fixed32  =  7;
  optional  fixed64 optional_fixed64  =  8;
  optional sfixed32 optional_sfixed32 =  9;
  optional sfixed64 optional_sfixed64 = 10;
  optional    float optional_float    = 11 [default = 1.5];
  optional   double optional_double   = 12;
  optional     bool optional_bool     = 13;
  optional   string optional_string   = 14;
  optional    bytes optional_bytes    = 15 [default = "moo"];

  optional group OptionalGroup = 16 {
    optional int32 a = 17;
  }

  optional NestedMessage optional_nested_message  = 18;
  optional NestedEnum    optional_nested_enum     = 21;

  optional int64 optional_int64_number =  50 [default = 9007199254740991];
  optional int64 optional_int64_string =  51 [default = 9007199254740993];

  // Repeated
  repeated    int32 repeated_int32    =  31;
  repeated    int64 repeated_int64    =  32;
  repeated   uint32 repeated_uint32   =  33;
  repeated   uint64 repeated_uint64   =  34;
  repeated   sint32 repeated_sint32   =  35;
  repeated   sint64 repeated_sint64   =  36;
  repeated  fixed32 repeated_fixed32  =  37;
  repeated  fixed64 repeated_fixed64  =  38;
  repeated sfixed32 repeated_sfixed32 =  39;
  repeated sfixed64 repeated_sfixed64 =  40;
  repeated    float repeated_float    =  41;
  repeated   double repeated_double   =  42;
  repeated     bool repeated_bool     =  43;
  repeated   string repeated_string   =  44;
  repeated    bytes repeated_bytes    =  45;

  repeated group RepeatedGroup = 46 {
    repeated int32 a = 47;
  }

  repeated NestedMessage repeated_nested_message  = 48;
  repeated NestedEnum    repeated_nested_enum     = 49;

  repeated int64 repeated_int64_number =  52;
  repeated int64 repeated_int64_string =  53;
}
